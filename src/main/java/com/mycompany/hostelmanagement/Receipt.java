/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.hostelmanagement;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Tan Zhong
 */
public class Receipt extends javax.swing.JFrame {

    public static String username;
    public static String roomID;
    public static String roomType;
    public static String duration;
    public static String fee;
    
    /**
     * Creates new form Receipt
     */
    public Receipt(String userName, String roomBooked, String type, String duration, String fee) {
        initComponents();
        Receipt.username = userName;
        Receipt.roomID = roomBooked;
        Receipt.roomType = type;
        Receipt.duration = duration;
        Receipt.fee = fee;
        displayDate();
        displayUserDetails();
        displayReservation();
        saveBookingRecord();
        updateHostel();
    }
    
    public Receipt(String userName, String roomBooked){
        initComponents();
        Receipt.username = userName;
        Receipt.roomID = roomBooked;
        displayReceipt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        receiptLab1 = new javax.swing.JLabel();
        receiptLab2 = new javax.swing.JLabel();
        receiptPanel = new javax.swing.JPanel();
        receiptUserLab1 = new javax.swing.JLabel();
        receiptNameLab1 = new javax.swing.JLabel();
        receiptEmailLab1 = new javax.swing.JLabel();
        receiptMobileLab1 = new javax.swing.JLabel();
        receiptRoomIDLab1 = new javax.swing.JLabel();
        receiptTypeLab1 = new javax.swing.JLabel();
        receiptPeriodLab1 = new javax.swing.JLabel();
        receiptPriceLab1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        receiptUserLab2 = new javax.swing.JLabel();
        receiptNameLab2 = new javax.swing.JLabel();
        receiptEmailLab2 = new javax.swing.JLabel();
        receiptMobileLab2 = new javax.swing.JLabel();
        receiptRoomIDLab2 = new javax.swing.JLabel();
        receiptTypeLab2 = new javax.swing.JLabel();
        receiptPeriodLab2 = new javax.swing.JLabel();
        receiptPriceLab2 = new javax.swing.JLabel();
        receiptDateLab1 = new javax.swing.JLabel();
        receiptDateLab2 = new javax.swing.JLabel();
        receiptOKBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Receipt");

        receiptLab1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        receiptLab1.setText("The Room is successfully reversed by you");

        receiptLab2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        receiptLab2.setText("Please kindly check the information below. Thank you.");

        receiptPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        receiptUserLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptUserLab1.setText("Username:");

        receiptNameLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptNameLab1.setText("Student Name: ");

        receiptEmailLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptEmailLab1.setText("Email:");

        receiptMobileLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptMobileLab1.setText("Mobile:");

        receiptRoomIDLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptRoomIDLab1.setText("Room ID:");

        receiptTypeLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptTypeLab1.setText("Type");

        receiptPeriodLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptPeriodLab1.setText("Period:");

        receiptPriceLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptPriceLab1.setText("Monthly Rental:");

        receiptUserLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptUserLab2.setText("Username");

        receiptNameLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptNameLab2.setText("Name");

        receiptEmailLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptEmailLab2.setText("Email");

        receiptMobileLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptMobileLab2.setText("Mobile Number");
        receiptMobileLab2.setToolTipText("");

        receiptRoomIDLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptRoomIDLab2.setText("MR0101");

        receiptTypeLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptTypeLab2.setText("Master Room");

        receiptPeriodLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptPeriodLab2.setText("6 Months");

        receiptPriceLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptPriceLab2.setText("RM1000");

        receiptDateLab1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptDateLab1.setText("Date:");

        receiptDateLab2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        receiptDateLab2.setText("04-05-2023");

        javax.swing.GroupLayout receiptPanelLayout = new javax.swing.GroupLayout(receiptPanel);
        receiptPanel.setLayout(receiptPanelLayout);
        receiptPanelLayout.setHorizontalGroup(
            receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(receiptPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(receiptDateLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptUserLab1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(receiptNameLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptEmailLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptMobileLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptRoomIDLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptTypeLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptPeriodLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptPriceLab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(receiptUserLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptNameLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptEmailLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptMobileLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptRoomIDLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptTypeLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptPeriodLab2, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(receiptPriceLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptDateLab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        receiptPanelLayout.setVerticalGroup(
            receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptUserLab1)
                    .addComponent(receiptUserLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptNameLab1)
                    .addComponent(receiptNameLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptEmailLab1)
                    .addComponent(receiptEmailLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptMobileLab1)
                    .addComponent(receiptMobileLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptDateLab1)
                    .addComponent(receiptDateLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(receiptRoomIDLab1)
                    .addComponent(receiptRoomIDLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptTypeLab1)
                    .addComponent(receiptTypeLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptPeriodLab1)
                    .addComponent(receiptPeriodLab2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiptPriceLab1)
                    .addComponent(receiptPriceLab2))
                .addGap(15, 15, 15))
        );

        receiptOKBtn.setText("OK");
        receiptOKBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptOKBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(receiptLab1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(receiptOKBtn)
                        .addComponent(receiptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(receiptLab2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(receiptLab1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(receiptLab2)
                .addGap(18, 18, 18)
                .addComponent(receiptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(receiptOKBtn)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Display the history record (receipt)
    private void displayReceipt(){
        try(BufferedReader br = new BufferedReader(new FileReader("Reservation.txt"))){
            String information;
            while((information = br.readLine()) != null)
            {
                String[] data = information.split(",");
                if(data[0].equals(roomID) && data[4].equals(username))
                {
                    receiptUserLab2.setText(data[4]);
                    receiptNameLab2.setText(data[5]);
                    receiptEmailLab2.setText(data[7]); 
                    receiptMobileLab2.setText(data[6]); 
                    
                    receiptDateLab2.setText(data[8]);
                    receiptRoomIDLab2.setText(data[0]);
                    receiptTypeLab2.setText(data[1]);
                    receiptPeriodLab2.setText(data[2]);
                    receiptPriceLab2.setText(data[3]);   
                }
            }
            br.close();
            
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Reservation.txt not found!", "Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Something wrong with reading file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //Display the user details who booked the room
    private void displayUserDetails(){
        try(BufferedReader br = new BufferedReader(new FileReader("Account.txt"))){
            String information;
            while((information = br.readLine()) != null)
            {
                String[] data = information.split(",");
                if(data[0].equals(username))
                {
                    receiptUserLab2.setText(data[0]);
                    receiptNameLab2.setText(data[2]);
                    receiptMobileLab2.setText(data[3]); 
                    receiptEmailLab2.setText(data[4]);      
                }
            }
            br.close();
            
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Account.txt not found!", "Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Something wrong with reading file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //Display the date of room booked
    private void displayDate(){
        GregorianCalendar gc = new GregorianCalendar();
        int year = gc.get(GregorianCalendar.YEAR);
        int month = (gc.get(GregorianCalendar.MONTH)+1);
        int day = gc.get(GregorianCalendar.DATE);
        receiptDateLab2.setText(day+"-"+month+"-"+year);
    }
    
    //Display the details of the room booked
    private void displayReservation(){
        receiptRoomIDLab2.setText(roomID);
        receiptTypeLab2.setText(roomType);
        receiptPeriodLab2.setText(duration);
        receiptPriceLab2.setText("RM "+fee);
    }
    
    //Write booking record into Reservation.txt
    private void saveBookingRecord(){
        String name = receiptNameLab2.getText();
        String mobile = receiptMobileLab2.getText();
        String email = receiptEmailLab2.getText();
        String date = receiptDateLab2.getText();
        
        try (PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter("Reservation.txt", true)))) {
            writer.println(roomID+","+roomType+","+duration+","+fee+","+username+","+name+","+mobile+","+email+","+date);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Something wrong with writting file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //Update the hostel, the room booked by the user
    //Which means the room is unavailable now, others cannot book this room
    private void updateHostel(){
        String availability = "booked";

        try(BufferedReader br = new BufferedReader(new FileReader("Room.txt")))
        {
            String information;
            while((information = br.readLine()) != null)
            {
                String[] data = information.split(",");
                //Search the room that has been booked
                if (data[0].equals(roomID))
                {
                    try {
                        double price = Double.parseDouble(data[4]);
                        hostel h = new hostel(data[0],data[1],data[2],data[3],price,availability,username);
                        ArrayList<String> tmp = h.mainFunc("Room.txt", "w");
                
                        PrintWriter w = new PrintWriter("Room.txt");
                        for(String editData : tmp){
                            w.println(editData);
                        }
                        w.close();
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(this, "Something wrong with updateing file!", "Error Message", JOptionPane.ERROR_MESSAGE);

                    }
                }
            }
        }
        catch (IOException ioe)
        {
            JOptionPane.showMessageDialog(this, "Something wrong with reading file!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    private void receiptOKBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptOKBtnActionPerformed
        // TODO add your handling code here:
        StudentPanel sp = new StudentPanel(username);
        sp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_receiptOKBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Receipt(username, roomID, roomType, duration, fee).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel receiptDateLab1;
    private javax.swing.JLabel receiptDateLab2;
    private javax.swing.JLabel receiptEmailLab1;
    private javax.swing.JLabel receiptEmailLab2;
    private javax.swing.JLabel receiptLab1;
    private javax.swing.JLabel receiptLab2;
    private javax.swing.JLabel receiptMobileLab1;
    private javax.swing.JLabel receiptMobileLab2;
    private javax.swing.JLabel receiptNameLab1;
    private javax.swing.JLabel receiptNameLab2;
    private javax.swing.JButton receiptOKBtn;
    private javax.swing.JPanel receiptPanel;
    private javax.swing.JLabel receiptPeriodLab1;
    private javax.swing.JLabel receiptPeriodLab2;
    private javax.swing.JLabel receiptPriceLab1;
    private javax.swing.JLabel receiptPriceLab2;
    private javax.swing.JLabel receiptRoomIDLab1;
    private javax.swing.JLabel receiptRoomIDLab2;
    private javax.swing.JLabel receiptTypeLab1;
    private javax.swing.JLabel receiptTypeLab2;
    private javax.swing.JLabel receiptUserLab1;
    private javax.swing.JLabel receiptUserLab2;
    // End of variables declaration//GEN-END:variables
}
